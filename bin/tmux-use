#!/usr/bin/env bash
# shellcheck disable=1090

# Configurable variable for tmux session file
TMUX_SESSION_FILE="${TMUX_SESSION_FILE:-.tmux.sh}"

# tmux is mandatory
if ! command -v tmux &>/dev/null; then
	echo "tmux is not installed" >&2
	exit 1
fi

get_zoxide_results() {
	if command -v fish &>/dev/null; then
		fish -c "z --list | awk '{print \$2}'"
	elif command -v zoxide &>/dev/null; then
		zoxide query -l
	else
		echo "zoxide not found" >&2
		exit 1
	fi
}

select_project() {
	local zoxide_result projects
	zoxide_result=$(get_zoxide_results)
	[ -z "$zoxide_result" ] && exit 1

	projects=()

	while IFS= read -r line; do
		[ -e "$line/.git" ] && projects+=("$line")
	done <<<"$zoxide_result"

	printf "%s\n" "${projects[@]}" | fzf --prompt "Select project: "
}

select_session() {
	local sessions
	sessions=$(tmux list-sessions -F "#{session_name}")
	[ -z "$sessions" ] && exit 1

	printf "%s\n" "$sessions" | fzf --prompt "Select session: "
}

get_cwd_session_name() {
	local dir_path
	dir_path="${PWD/#$HOME\//}"
	echo "$dir_path" | tr '/' '-' | sed 's/\.//g'
}

case "$@" in
*session*setup*)
	PROJECT_DIR=$(select_project)
	[ -z "$PROJECT_DIR" ] && exit 1
	cd "$PROJECT_DIR" || exit 1
	SESSION_NAME=${SESSION_NAME:-$(get_cwd_session_name)}
	;;
*session*teardown*)
	SESSION_NAME=$(select_session)
	[ -z "$SESSION_NAME" ] && exit 1
	;;
esac

[ -f "$TMUX_SESSION_FILE" ] && . "$TMUX_SESSION_FILE"

case "${@:-setup}" in
*setup*)
	if ! tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
		tmux new-session -d -s "$SESSION_NAME" -c "$PROJECT_DIR"
		declare -f setup >/dev/null && setup
	fi

	if [ -n "$TMUX" ]; then
		tmux switch-client -t "$SESSION_NAME"
	else
		tmux attach-session -t "$SESSION_NAME"
	fi
	;;
*teardown*)
	declare -f teardown >/dev/null && teardown
	if [ -n "$TMUX" ]; then
		tmux kill-session -t "$SESSION_NAME"
	fi
	;;
*)
	echo "Usage: $0 {session setup|session teardown|setup|teardown}"
	exit 1
	;;
esac
